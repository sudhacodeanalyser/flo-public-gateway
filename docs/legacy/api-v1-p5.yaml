paths:
  '/api/v1/pes/proposed/{param_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/pes/proposed/{param_id}'
      parameters:
        - name: param_id
          in: path
          description: param_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/proposed/%7Bparam_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/pes/proposed/%7Bparam_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/proposed/%7Bparam_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/pes/proposed/%7Bparam_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/proposed/%7Bparam_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/pes/proposed/%7Bparam_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/pes/proposed_user:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/pes/proposed_user
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/proposed_user")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/pes/proposed_user");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/proposed_user",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/pes/proposed_user", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/proposed_user"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/pes/proposed_user \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/pkilogs:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/pkilogs
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pkilogs")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/pkilogs");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pkilogs",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/pkilogs", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pkilogs"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/pkilogs \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/registrationtokens:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/registrationtokens
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/registrationtokens")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/registrationtokens");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/registrationtokens",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/registrationtokens", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/registrationtokens"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/registrationtokens \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/registrationtokens/{token1}/{token2}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/registrationtokens/{token1}/{token2}'
      parameters:
        - name: token1
          in: path
          description: token
          required: true
          schema:
            type: string
        - name: token2
          in: path
          description: token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/registrationtokens/{token1}/{token2}'
      parameters:
        - name: token1
          in: path
          description: token
          required: true
          schema:
            type: string
        - name: token2
          in: path
          description: token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/registrationtokens/{token1}/{token2}'
      parameters:
        - name: token1
          in: path
          description: token
          required: true
          schema:
            type: string
        - name: token2
          in: path
          description: token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/registrationtokens/{token1}/{token2}'
      parameters:
        - name: token1
          in: path
          description: token
          required: true
          schema:
            type: string
        - name: token2
          in: path
          description: token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT",
            "//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/registrationtokens/%7Btoken1%7D/%7Btoken2%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/registrationtokens/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/registrationtokens/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/registrationtokens/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/registrationtokens/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/registrationtokens/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/registrationtokens/scan",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/registrationtokens/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/registrationtokens/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/resettokens:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/resettokens
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/resettokens")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/resettokens");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/resettokens",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/resettokens", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/resettokens"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/resettokens \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/resettokens/{user_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/resettokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/resettokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/resettokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/resettokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/resettokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/resettokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/resettokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/resettokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/resettokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/resettokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/resettokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT", "//api/v1/resettokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("PUT", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/resettokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/resettokens/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/resettokens/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/resettokens/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET", "https://api.meetflo.com//api/v1/resettokens/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/resettokens/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/resettokens/scan", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/resettokens/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/resettokens/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/smsdeliverylogs:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/smsdeliverylogs
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/smsdeliverylogs")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/smsdeliverylogs");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/smsdeliverylogs",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/smsdeliverylogs", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/smsdeliverylogs"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/smsdeliverylogs \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/smsdeliverylogs/{id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/smsdeliverylogs/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/smsdeliverylogs/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/smsdeliverylogs/%7Bid%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/smsdeliverylogs/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/smsdeliverylogs/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/smsdeliverylogs/%7Bid%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/smsdeliverylogs/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/smsdeliverylogs/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/smsdeliverylogs/%7Bid%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/smsdeliverylogs/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/smsdeliverylogs/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT", "//api/v1/smsdeliverylogs/%7Bid%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("PUT", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/smsdeliverylogs/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/smsdeliverylogs/archive/{id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/smsdeliverylogs/archive/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/smsdeliverylogs/archive/%7Bid%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/smsdeliverylogs/archive/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/smsdeliverylogs/archive/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/smsdeliverylogs/archive/%7Bid%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/smsdeliverylogs/archive/%7Bid%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/smsdeliverylogs/archive/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/smsdeliverylogs/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/smsdeliverylogs/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/smsdeliverylogs/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/smsdeliverylogs/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/smsdeliverylogs/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/smsdeliverylogs/scan",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/smsdeliverylogs/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/smsdeliverylogs/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/stockicds:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/stockicds
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/stockicds");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/stockicds", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/stockicds \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/stockicds/{id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/stockicds/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/%7Bid%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/stockicds/%7Bid%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/stockicds/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/stockicds/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/%7Bid%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/stockicds/%7Bid%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/stockicds/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/stockicds/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/%7Bid%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/stockicds/%7Bid%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/stockicds/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/stockicds/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/%7Bid%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("PUT", "//api/v1/stockicds/%7Bid%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("PUT", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/stockicds/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/stockicds/{id}/qrcode':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/stockicds/{id}/qrcode'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/%7Bid%7D/qrcode")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D/qrcode");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/%7Bid%7D/qrcode",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/stockicds/%7Bid%7D/qrcode",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/%7Bid%7D/qrcode"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/stockicds/%7Bid%7D/qrcode \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/stockicds/archive/{id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/stockicds/archive/{id}'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/archive/%7Bid%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/stockicds/archive/%7Bid%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/archive/%7Bid%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/stockicds/archive/%7Bid%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/archive/%7Bid%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/stockicds/archive/%7Bid%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/stockicds/generate:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/stockicds/generate
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/generate")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/stockicds/generate");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/generate",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/stockicds/generate", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/generate"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/stockicds/generate \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/stockicds/remove-from-pki:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/stockicds/remove-from-pki
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/stockicds/remove-from-pki")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/stockicds/remove-from-pki");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/stockicds/remove-from-pki",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/stockicds/remove-from-pki",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/stockicds/remove-from-pki"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/stockicds/remove-from-pki \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/subscriptions:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/subscriptions
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/subscriptions");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/subscriptions", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/subscriptions"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/subscriptions \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/group/{group_id}/analytics/daily':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/group/{group_id}/analytics/daily'
      parameters:
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/group/{group_id}/analytics/daily'
      parameters:
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/analytics/daily \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/group/{group_id}/icd/{icd_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/group/{group_id}/icd/{icd_id}'
      parameters:
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/group/{group_id}/icd/{icd_id}'
      parameters:
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/icd/%7Bicd_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/group/{group_id}/pending/location':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/group/{group_id}/pending/location'
      parameters:
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/group/%7Bgroup_id%7D/pending/location",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/group/%7Bgroup_id%7D/pending/location",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/group/{group_id}/pending/location'
      parameters:
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/group/%7Bgroup_id%7D/pending/location",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/group/%7Bgroup_id%7D/pending/location",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/group/%7Bgroup_id%7D/pending/location \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/icd/{icd_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/notifications/icd/%7Bicd_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/notifications/icd/%7Bicd_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/icd/{icd_id}/clear':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/clear'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/clear")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/clear");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/clear",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/icd/%7Bicd_id%7D/clear", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/clear"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/clear \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/icd/{icd_id}/cleared':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/cleared'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/cleared",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/icd/%7Bicd_id%7D/cleared", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/cleared'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/cleared",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/icd/%7Bicd_id%7D/cleared", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/cleared \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/icd/{icd_id}/pending':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/icd/{icd_id}/pending/alarmid':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending/alarmid'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending/alarmid'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/alarmid \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/icd/{icd_id}/pending/severity':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending/severity'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending/severity'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notifications/icd/{icd_id}/pending/severity/alarmid':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending/severity/alarmid'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notifications/icd/{icd_id}/pending/severity/alarmid'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notifications/icd/%7Bicd_id%7D/pending/severity/alarmid \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notificationtokens/{user_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notificationtokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notificationtokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/notificationtokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notificationtokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notificationtokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/notificationtokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notificationtokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notificationtokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/notificationtokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notificationtokens/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notificationtokens/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT", "//api/v1/notificationtokens/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notificationtokens/{user_id}/addtoken':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notificationtokens/{user_id}/addtoken'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/addtoken")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/addtoken");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notificationtokens/%7Buser_id%7D/addtoken",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notificationtokens/%7Buser_id%7D/addtoken",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/addtoken"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/addtoken \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notificationtokens/{user_id}/removetoken':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notificationtokens/{user_id}/removetoken'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/removetoken")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/removetoken");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notificationtokens/%7Buser_id%7D/removetoken",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notificationtokens/%7Buser_id%7D/removetoken",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/removetoken"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notificationtokens/%7Buser_id%7D/removetoken \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/notificationtokens/archive/{user_id}':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/notificationtokens/archive/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/notificationtokens/archive/%7Buser_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/notificationtokens/archive/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/notificationtokens/archive/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/notificationtokens/archive/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/notificationtokens/archive/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/notificationtokens/archive/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/onboarding/event/device/forced-sleep-disabled:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/onboarding/event/device/forced-sleep-disabled
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/onboarding/event/device/forced-sleep-disabled")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/onboarding/event/device/forced-sleep-disabled");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/onboarding/event/device/forced-sleep-disabled",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/onboarding/event/device/forced-sleep-disabled",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/onboarding/event/device/forced-sleep-disabled"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/onboarding/event/device/forced-sleep-disabled \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/onboarding/event/device/installed:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/onboarding/event/device/installed
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                created_at:
                  type: string
                  format: date-time
                  example: 2019-04-03T05:50:47.889Z
                icd_id:
                  type: string
                  format: uuid
                  example: ffffffff-ffff-4fff-8fff-ffffffffffff
                event:
                  type: integer
                  format: int32
                  example: 2
              example:
                created_at: '2019-04-03T05:50:47.889Z'
                icd_id: ffffffff-ffff-4fff-8fff-ffffffffffff
                event: 2
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceId'
            example:
              device_id: ffffffffffff
        required: true
      x-code-samples:
        - lang: Java_okhttp
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "\"ffffffffffff\"");

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/onboarding/event/device/installed")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = JSON.stringify("ffffffffffff");


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/onboarding/event/device/installed");

            xhr.setRequestHeader("content-type", "application/json");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/onboarding/event/device/installed",
              "headers": {
                "content-type": "application/json",
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify('ffffffffffff'));
            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            payload = "\"ffffffffffff\""


            headers = {
                'content-type': "application/json",
                'authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "//api/v1/onboarding/event/device/installed",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/onboarding/event/device/installed"


            payload = "\"ffffffffffff\""

            headers = {
                'content-type': "application/json",
                'authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            response = requests.request("POST", url, data=payload,
            headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/onboarding/event/device/installed \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '"ffffffffffff"'
  /api/v1/onboarding/event/device/paired:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/onboarding/event/device/paired
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/onboarding/event/device/paired")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/onboarding/event/device/paired");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/onboarding/event/device/paired",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/onboarding/event/device/paired",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/onboarding/event/device/paired"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/onboarding/event/device/paired \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/onboarding/icd/{icd_id}/current':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/onboarding/icd/{icd_id}/current'
      parameters:
        - name: icd_id
          in: path
          description: icd_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/onboarding/icd/%7Bicd_id%7D/current")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/onboarding/icd/%7Bicd_id%7D/current");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/onboarding/icd/%7Bicd_id%7D/current",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/onboarding/icd/%7Bicd_id%7D/current",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/onboarding/icd/%7Bicd_id%7D/current"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/onboarding/icd/%7Bicd_id%7D/current \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/passwordless/{user_id}/{passwordless_token}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/passwordless/{user_id}/{passwordless_token}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: passwordless_token
          in: path
          description: passwordless_token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/passwordless/{user_id}/{passwordless_token}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: passwordless_token
          in: path
          description: passwordless_token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/passwordless/%7Buser_id%7D/%7Bpasswordless_token%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/passwordless/start:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/passwordless/start
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/passwordless/start")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/passwordless/start");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/passwordless/start",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/passwordless/start", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/passwordless/start"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/passwordless/start \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/pes/compute:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/pes/compute
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/compute")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/pes/compute");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/compute",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/pes/compute", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/compute"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/pes/compute \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/pes/devices:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/pes/devices
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/devices")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET", "https://api.meetflo.com//api/v1/pes/devices");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/devices",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/pes/devices", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/devices"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/pes/devices \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/pes/devices
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/devices")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/pes/devices");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/devices",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/pes/devices", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/devices"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/pes/devices \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/pes/devices/{device_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/pes/devices/{device_id}'
      parameters:
        - name: device_id
          in: path
          description: device_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/devices/%7Bdevice_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/pes/devices/%7Bdevice_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/pes/devices/{device_id}'
      parameters:
        - name: device_id
          in: path
          description: device_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/devices/%7Bdevice_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/pes/devices/%7Bdevice_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/pes/devices/{device_id}/accept':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/pes/devices/{device_id}/accept'
      parameters:
        - name: device_id
          in: path
          description: device_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/accept")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/accept");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/devices/%7Bdevice_id%7D/accept",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/pes/devices/%7Bdevice_id%7D/accept",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/accept"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/accept \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/pes/devices/{device_id}/deploy':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/pes/devices/{device_id}/deploy'
      parameters:
        - name: device_id
          in: path
          description: device_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/deploy")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/deploy");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/devices/%7Bdevice_id%7D/deploy",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/pes/devices/%7Bdevice_id%7D/deploy",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/deploy"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/deploy \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/pes/devices/{device_id}/reject':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/pes/devices/{device_id}/reject'
      parameters:
        - name: device_id
          in: path
          description: device_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/reject")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/reject");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/devices/%7Bdevice_id%7D/reject",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/pes/devices/%7Bdevice_id%7D/reject",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/reject"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/pes/devices/%7Bdevice_id%7D/reject \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/pes/proposed:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/pes/proposed
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/pes/proposed")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET", "https://api.meetflo.com//api/v1/pes/proposed");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/pes/proposed",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/pes/proposed", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/pes/proposed"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/pes/proposed \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'


