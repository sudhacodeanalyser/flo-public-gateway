paths:
  '/api/v1/useraccountgrouproles/{user_id}/{group_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountgrouproles/{user_id}/{group_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountgrouproles/{user_id}/{group_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountgrouproles/{user_id}/{group_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountgrouproles/{user_id}/{group_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT",
            "//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles/%7Buser_id%7D/%7Bgroup_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useraccountgrouproles/archive/{user_id}/{group_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountgrouproles/archive/{user_id}/{group_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles/archive/%7Buser_id%7D/%7Bgroup_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/useraccountgrouproles/archive/%7Buser_id%7D/%7Bgroup_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles/archive/%7Buser_id%7D/%7Bgroup_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/useraccountgrouproles/archive/%7Buser_id%7D/%7Bgroup_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountgrouproles/archive/%7Buser_id%7D/%7Bgroup_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles/archive/%7Buser_id%7D/%7Bgroup_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/useraccountgrouproles/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/useraccountgrouproles/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useraccountgrouproles/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/useraccountgrouproles/scan",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/useraccountgrouproles/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useraccountgrouproles/userid/{user_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountgrouproles/userid/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles/userid/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useraccountgrouproles/userid/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles/userid/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useraccountgrouproles/userid/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountgrouproles/userid/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles/userid/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/useraccountroles:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/useraccountroles
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/useraccountroles");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/useraccountroles", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/useraccountroles"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/useraccountroles \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useraccountroles/{user_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountroles/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/useraccountroles/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useraccountroles/{user_id}/{account_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountroles/{user_id}/{account_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountroles/{user_id}/{account_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountroles/{user_id}/{account_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountroles/{user_id}/{account_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT",
            "//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/useraccountroles/%7Buser_id%7D/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useraccountroles/account/{account_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountroles/account/{account_id}'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/account/%7Baccount_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useraccountroles/account/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/account/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useraccountroles/account/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountroles/account/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useraccountroles/account/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useraccountroles/archive/{user_id}/{account_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useraccountroles/archive/{user_id}/{account_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/archive/%7Buser_id%7D/%7Baccount_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/useraccountroles/archive/%7Buser_id%7D/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/archive/%7Buser_id%7D/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/useraccountroles/archive/%7Buser_id%7D/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useraccountroles/archive/%7Buser_id%7D/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/useraccountroles/archive/%7Buser_id%7D/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/useraccountroles/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/useraccountroles/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountroles/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useraccountroles/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountroles/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/useraccountroles/scan",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/useraccountroles/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useraccountroles/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/useralarmnotificationdeliveryrules:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/useralarmnotificationdeliveryrules
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/useralarmnotificationdeliveryrules",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useralarmnotificationdeliveryrules/{user_id}/{location_id}/{alarm_id}/{system_mode}':
    delete:
      security:
        - OAuth2:
            - user
      summary: >-
        /api/v1/useralarmnotificationdeliveryrules/{user_id}/{location_id}/{alarm_id}/{system_mode}
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
        - name: alarm_id
          in: path
          description: alarm_id
          required: true
          schema:
            type: string
        - name: system_mode
          in: path
          description: system_mode
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: >-
        /api/v1/useralarmnotificationdeliveryrules/{user_id}/{location_id}/{alarm_id}/{system_mode}
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
        - name: alarm_id
          in: path
          description: alarm_id
          required: true
          schema:
            type: string
        - name: system_mode
          in: path
          description: system_mode
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: >-
        /api/v1/useralarmnotificationdeliveryrules/{user_id}/{location_id}/{alarm_id}/{system_mode}
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
        - name: alarm_id
          in: path
          description: alarm_id
          required: true
          schema:
            type: string
        - name: system_mode
          in: path
          description: system_mode
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: >-
        /api/v1/useralarmnotificationdeliveryrules/{user_id}/{location_id}/{alarm_id}/{system_mode}
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
        - name: alarm_id
          in: path
          description: alarm_id
          required: true
          schema:
            type: string
        - name: system_mode
          in: path
          description: system_mode
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT",
            "//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/%7Buser_id%7D/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/useralarmnotificationdeliveryrules/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/useralarmnotificationdeliveryrules/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useralarmnotificationdeliveryrules/scan", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/scan"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useralarmnotificationdeliveryrules/user/{user_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/useralarmnotificationdeliveryrules/user/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/user/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/user/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/user/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useralarmnotificationdeliveryrules/user/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/user/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/user/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useralarmnotificationdeliveryrules/userlocation/{user_id}/{location_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: >-
        /api/v1/useralarmnotificationdeliveryrules/userlocation/{user_id}/{location_id}
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/userlocation/%7Buser_id%7D/%7Blocation_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/userlocation/%7Buser_id%7D/%7Blocation_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/userlocation/%7Buser_id%7D/%7Blocation_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useralarmnotificationdeliveryrules/userlocation/%7Buser_id%7D/%7Blocation_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/userlocation/%7Buser_id%7D/%7Blocation_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/userlocation/%7Buser_id%7D/%7Blocation_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useralarmnotificationdeliveryrules/users/{location_id}/{alarm_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: >-
        /api/v1/useralarmnotificationdeliveryrules/users/{location_id}/{alarm_id}
      parameters:
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
        - name: alarm_id
          in: path
          description: alarm_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/useralarmnotificationdeliveryrules/users/{location_id}/{alarm_id}/{system_mode}':
    get:
      security:
        - OAuth2:
            - user
      summary: >-
        /api/v1/useralarmnotificationdeliveryrules/users/{location_id}/{alarm_id}/{system_mode}
      parameters:
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
        - name: alarm_id
          in: path
          description: alarm_id
          required: true
          schema:
            type: string
        - name: system_mode
          in: path
          description: system_mode
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/useralarmnotificationdeliveryrules/users/%7Blocation_id%7D/%7Balarm_id%7D/%7Bsystem_mode%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/userdetails:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/userdetails
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/userdetails");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/userdetails", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userdetails"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/userdetails \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/userdetails/{user_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userdetails/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/userdetails/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userdetails/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/userdetails/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userdetails/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/userdetails/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userdetails/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT", "//api/v1/userdetails/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("PUT", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/userdetails/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/userdetails/archive/{user_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userdetails/archive/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails/archive/%7Buser_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/userdetails/archive/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails/archive/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/userdetails/archive/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userdetails/archive/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/userdetails/archive/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/userdetails/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/userdetails/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET", "https://api.meetflo.com//api/v1/userdetails/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/userdetails/scan", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userdetails/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/userdetails/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/userdetails/user/{user_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userdetails/user/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userdetails/user/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/userdetails/user/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userdetails/user/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/userdetails/user/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userdetails/user/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/userdetails/user/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/userlocationroles:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/userlocationroles
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/userlocationroles");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/userlocationroles", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userlocationroles"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/userlocationroles \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/userlocationroles/{user_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userlocationroles/{user_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/%7Buser_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/userlocationroles/%7Buser_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/userlocationroles/{user_id}/{location_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userlocationroles/{user_id}/{location_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userlocationroles/{user_id}/{location_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userlocationroles/{user_id}/{location_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userlocationroles/{user_id}/{location_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT",
            "//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/userlocationroles/%7Buser_id%7D/%7Blocation_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/userlocationroles/archive/{user_id}/{location_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userlocationroles/archive/{user_id}/{location_id}'
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/archive/%7Buser_id%7D/%7Blocation_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/userlocationroles/archive/%7Buser_id%7D/%7Blocation_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/archive/%7Buser_id%7D/%7Blocation_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/userlocationroles/archive/%7Buser_id%7D/%7Blocation_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userlocationroles/archive/%7Buser_id%7D/%7Blocation_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/userlocationroles/archive/%7Buser_id%7D/%7Blocation_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/userlocationroles/location/{location_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/userlocationroles/location/{location_id}'
      parameters:
        - name: location_id
          in: path
          description: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/location/%7Blocation_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/userlocationroles/location/%7Blocation_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/location/%7Blocation_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/userlocationroles/location/%7Blocation_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/userlocationroles/location/%7Blocation_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/userlocationroles/location/%7Blocation_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/userlocationroles/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/userlocationroles/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/userlocationroles/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/userlocationroles/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/userlocationroles/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/userlocationroles/scan",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/userlocationroles/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/userlocationroles/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/timezones:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/timezones
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/timezones");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/timezones", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/timezones \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/timezones/{tz}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/timezones/{tz}'
      parameters:
        - name: tz
          in: path
          description: tz
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones/%7Btz%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/timezones/%7Btz%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones/%7Btz%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/timezones/%7Btz%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones/%7Btz%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/timezones/%7Btz%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/timezones/{tz}'
      parameters:
        - name: tz
          in: path
          description: tz
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones/%7Btz%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/timezones/%7Btz%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones/%7Btz%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/timezones/%7Btz%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones/%7Btz%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/timezones/%7Btz%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/timezones/{tz}'
      parameters:
        - name: tz
          in: path
          description: tz
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones/%7Btz%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/timezones/%7Btz%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones/%7Btz%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/timezones/%7Btz%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones/%7Btz%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/timezones/%7Btz%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/timezones/{tz}'
      parameters:
        - name: tz
          in: path
          description: tz
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones/%7Btz%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/timezones/%7Btz%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones/%7Btz%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("PUT", "//api/v1/timezones/%7Btz%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones/%7Btz%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("PUT", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/timezones/%7Btz%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/timezones/active:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/timezones/active
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones/active")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET", "https://api.meetflo.com//api/v1/timezones/active");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones/active",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/timezones/active", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones/active"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/timezones/active \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/timezones/archive/{tz}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/timezones/archive/{tz}'
      parameters:
        - name: tz
          in: path
          description: tz
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones/archive/%7Btz%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/timezones/archive/%7Btz%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones/archive/%7Btz%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/timezones/archive/%7Btz%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones/archive/%7Btz%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/timezones/archive/%7Btz%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/timezones/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/timezones/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/timezones/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET", "https://api.meetflo.com//api/v1/timezones/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/timezones/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/timezones/scan", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/timezones/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/timezones/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/ultimaversions:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/ultimaversions
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/ultimaversions")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST", "https://api.meetflo.com//api/v1/ultimaversions");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/ultimaversions",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "//api/v1/ultimaversions", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/ultimaversions"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/ultimaversions \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/ultimaversions/{model}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/ultimaversions/{model}'
      parameters:
        - name: model
          in: path
          description: model
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/ultimaversions/%7Bmodel%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/ultimaversions/%7Bmodel%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/ultimaversions/{model}/{version}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/ultimaversions/{model}/{version}'
      parameters:
        - name: model
          in: path
          description: model
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: version
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/ultimaversions/{model}/{version}'
      parameters:
        - name: model
          in: path
          description: model
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: version
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET",
            "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/ultimaversions/{model}/{version}'
      parameters:
        - name: model
          in: path
          description: model
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: version
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/ultimaversions/{model}/{version}'
      parameters:
        - name: model
          in: path
          description: model
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: version
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT",
            "//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/ultimaversions/%7Bmodel%7D/%7Bversion%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/ultimaversions/scan:
    get:
      security:
        - OAuth2:
            - user
      summary: /api/v1/ultimaversions/scan
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/ultimaversions/scan")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/ultimaversions/scan");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/ultimaversions/scan",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.meetflo.com")

            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "//api/v1/ultimaversions/scan", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/ultimaversions/scan"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/ultimaversions/scan \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/useraccountgrouproles:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/useraccountgrouproles
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/useraccountgrouproles")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/useraccountgrouproles");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/useraccountgrouproles",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/useraccountgrouproles",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/useraccountgrouproles"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/useraccountgrouproles \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/subscriptions/{account_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/subscriptions/{account_id}'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE", "//api/v1/subscriptions/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/subscriptions/{account_id}'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/subscriptions/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/subscriptions/{account_id}'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/subscriptions/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
    put:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/subscriptions/{account_id}'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D")
              .put(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("PUT",
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PUT",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("PUT", "//api/v1/subscriptions/%7Baccount_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("PUT", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request PUT \
              --url https://api.meetflo.com//api/v1/subscriptions/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/subscriptions/archive/{account_id}':
    delete:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/subscriptions/archive/{account_id}'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions/archive/%7Baccount_id%7D")
              .delete(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("DELETE",
            "https://api.meetflo.com//api/v1/subscriptions/archive/%7Baccount_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions/archive/%7Baccount_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("DELETE",
            "//api/v1/subscriptions/archive/%7Baccount_id%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/subscriptions/archive/%7Baccount_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("DELETE", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.meetflo.com//api/v1/subscriptions/archive/%7Baccount_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/subscriptions/coupon/{coupon_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/subscriptions/coupon/{coupon_id}'
      parameters:
        - name: coupon_id
          in: path
          description: coupon_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions/coupon/%7Bcoupon_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/subscriptions/coupon/%7Bcoupon_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions/coupon/%7Bcoupon_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/subscriptions/coupon/%7Bcoupon_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/subscriptions/coupon/%7Bcoupon_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/subscriptions/coupon/%7Bcoupon_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  /api/v1/subscriptions/webhook/stripe:
    post:
      security:
        - OAuth2:
            - user
      summary: /api/v1/subscriptions/webhook/stripe
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/subscriptions/webhook/stripe")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/subscriptions/webhook/stripe");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/subscriptions/webhook/stripe",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST", "//api/v1/subscriptions/webhook/stripe",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.meetflo.com//api/v1/subscriptions/webhook/stripe"

            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/subscriptions/webhook/stripe \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/taskschedulerlogs/task/{task_id}':
    get:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/taskschedulerlogs/task/{task_id}'
      parameters:
        - name: task_id
          in: path
          description: task_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D")
              .get()
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("GET",
            "https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/taskschedulerlogs/task/%7Btask_id%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("GET", "//api/v1/taskschedulerlogs/task/%7Btask_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("GET", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'
  '/api/v1/taskschedulerlogs/task/{task_id}/{status}':
    post:
      security:
        - OAuth2:
            - user
      summary: '/api/v1/taskschedulerlogs/task/{task_id}/{status}'
      parameters:
        - name: task_id
          in: path
          description: task_id
          required: true
          schema:
            type: string
        - name: status
          in: path
          description: status
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-code-samples:
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D/%7Bstatus%7D")
              .post(null)
              .addHeader("authorization", "Bearer REPLACE_BEARER_TOKEN")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Javascript_xhr
          source: >-
            var data = null;


            var xhr = new XMLHttpRequest();

            xhr.withCredentials = true;


            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });


            xhr.open("POST",
            "https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D/%7Bstatus%7D");

            xhr.setRequestHeader("authorization", "Bearer
            REPLACE_BEARER_TOKEN");


            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.meetflo.com",
              "port": null,
              "path": "//api/v1/taskschedulerlogs/task/%7Btask_id%7D/%7Bstatus%7D",
              "headers": {
                "authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Python_python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("api.meetflo.com")


            headers = { 'authorization': "Bearer REPLACE_BEARER_TOKEN" }


            conn.request("POST",
            "//api/v1/taskschedulerlogs/task/%7Btask_id%7D/%7Bstatus%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Python_requests
          source: >-
            import requests


            url =
            "https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D/%7Bstatus%7D"


            headers = {'authorization': 'Bearer REPLACE_BEARER_TOKEN'}


            response = requests.request("POST", url, headers=headers)


            print(response.text)
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.meetflo.com//api/v1/taskschedulerlogs/task/%7Btask_id%7D/%7Bstatus%7D \
              --header 'authorization: Bearer REPLACE_BEARER_TOKEN'






