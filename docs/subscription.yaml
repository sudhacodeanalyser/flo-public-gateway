paths:
  /subscriptions:
    post:
      summary: Creates a Subscription.
      tags:
        - subscriptions
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreate'
      responses:
        201:
          description: The newly created Subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        400:
          description: |
            This error can happen if:
              - The User is not the Account Owner
              - A Subscription already exists for the given Location
          schema:
            $ref: '#/components/schemas/Error'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        409:
          description: |
            This error can happen if:
              - A User with the specified ID was not found
              - A Location with the specified ID was not found
          schema:
            $ref: '#/components/schemas/Error'

  /subscriptions/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: Subscription ID

    get:
      summary: Retrieves a Subscription by ID.
      tags:
        - subscriptions
      produces:
        - application/json
      parameters:
        - $ref: '#/components/parameters/ExpandParam'
      responses:
        200:
          description: A Subscription with the specified ID or an empty object if not found.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Subscription'
                  - $ref: '#/components/schemas/Empty'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'

    delete:
      summary: Deletes a Subscription by ID.
      tags:
        - subscriptions
      produces:
        - application/json
      responses:
        200:
          description: The Subscription was successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        204:
          description: A Subscription with the specified ID was not found.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'

components:
  schemas:
    SubscriptionPlan:
      type: object
      properties:
        id:
          type: string
        features:
          type: array
          items:
            type: string
        monthlyCost:
          type: number
    SubscriptionCreate:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
        location:
          type: object
          properties:
            id:
              type: string
              format: uuid
        isActive:
          type: boolean
        plan:
          type: object
          properties:
            id:
              type: string
        sourceId:
          type: string
        provider:
          type: object
          properties:
            name:
              type: string
            token:
              type: string
            couponId:
              type: string
    Subscription:
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
            plan:
              oneOf:
                - type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                - $ref: '#/components/schemas/SubscriptionPlan'
            location:
              $ref: '#/components/schemas/LocationExpandable'
            sourceId:
              type: string
        - $ref: '#/components/schemas/Timestamped'

